{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./plugin.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","kiwi","plugin","log","jitsiDomain","state","setting","camsVisible","mediaViewerOpen","jitsiLoaded","api","buttonAdded","jitsiDiv","resizejitsiDiv","network","buffer","options","domain","conferencingTool","document","createElement","className","addUi","onclick","e","preventDefault","hideCams","emit","iframe","url","setTimeout","getElementsByClassName","childNodes","style","width","height","window","getActiveNetwork","getActiveBuffer","suffix","Date","now","isChannelName","replace","nicks","push","nick","sort","join","encodeURIComponent","substring","indexOf","roomName","parentNode","interfaceConfigOverwrite","TOOLBAR_BUTTONS","jitsiAPIScript","setAttribute","addEventListener","event","target","nodeName","innerHTML","JitsiMeetExternalAPI","executeCommand","head","appendChild","display","dispose","srcElement","on"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","kiwi.plugin('conferencePlugin', function(kiwi, log) {\n  let jitsiDomain = kiwi.state.setting('conference.server') || 'meet.jit.si'\n  let camsVisible = mediaViewerOpen = jitsiLoaded = api = buttonAdded = false;\n  let jitsiDiv = resizejitsiDiv = network = buffer = options = domain = false;\n  \n  if(!buttonAdded){\n    buttonAdded = true;\n    const conferencingTool = document.createElement('i');\n    conferencingTool.className = 'fa fa-video-camera';\n    kiwi.addUi('input', conferencingTool);\n    conferencingTool.onclick = function(e){ \n      e.preventDefault();\n      if(camsVisible){\n        hideCams();\n      }else{\n        showCams();\n      }\n    }\n  }\n  \n  function iframeizeCams(){\n    kiwi.emit('mediaviewer.show', { iframe: false, url: 'about:blank' });\n    setTimeout(() => {\n      if(typeof document.getElementsByClassName(\"embedly-card\")[0] !== \"undefined\"){\n        jitsiDiv = document.getElementsByClassName(\"kiwi-mediaviewer\")[0].childNodes[2];\n      }else{\n        jitsiDiv = document.getElementsByClassName(\"kiwi-mediaviewer\")[0].childNodes[2];\n      }\n      jitsiDiv.style.width = '100%';\n      jitsiDiv.style.height = '100%';\n      \n      network = window.kiwi.state.getActiveNetwork();\n      buffer = window.kiwi.state.getActiveBuffer(); \n      let d = Date.now();\n      while(typeof buffer.name === \"undefined\" && Date.now() - d < 5000){ // allow up to 5 seconds to get buffer data\n        buffer = window.kiwi.state.getActiveBuffer();\n      }\n      let suffix;\n      if(!network.isChannelName(buffer.name)){ // cam is being invoked in PM, not a channel\n        let nicks = [];\n        nicks.push(network.nick);\n        nicks.push(buffer.name);\n        nicks.sort();\n        let s = nicks.join('').replace(/-/g,\"\");\n        suffix = encodeURIComponent(s.substring(0,s.indexOf(\"#\")==-1?100:s.indexOf(\"#\")-1));\n      }else{\n        suffix = buffer.name.replace(/#/g, \"\");\n      }\n      let roomName = network.name + suffix;\n      domain = jitsiDomain;\n      options = {\n          height:\"100%\",\n          roomName,\n          parentNode: jitsiDiv,\n          interfaceConfigOverwrite: {TOOLBAR_BUTTONS: [\n          'microphone', 'camera', 'fullscreen', 'fodeviceselection', 'hangup',\n          'profile', 'contacts', 'info', 'recording', 'etherpad',\n          'settings', 'videoquality', 'filmstrip',\n          'invite', 'feedback', 'stats', 'shortcuts'\n          ]}\n      }\n      let jitsiAPIScript = document.createElement(\"script\");\n      jitsiAPIScript.setAttribute(\"type\", \"text/javascript\");\n      jitsiAPIScript.setAttribute(\"src\", \"https://meet.jit.si/external_api.js\");\n      jitsiAPIScript.addEventListener(\"load\", function(event){\n        if(event.target.nodeName === \"SCRIPT\"){\n          jitsiLoaded = true;\n          jitsiDiv.innerHTML=\"\";\n          api = new JitsiMeetExternalAPI(domain, options);\n          api.executeCommand('displayName', network.nick);\n          api.executeCommand('toggleAudio');\n          api.executeCommand('toggleVideo');\n        }\n      });\n      if(!jitsiLoaded){\n        jitsiLoaded = true;\n        document.head.appendChild(jitsiAPIScript);\n      }\n    },100);\n  }\n  \n  window.addEventListener(\"click\", function(e){\n    if(e.srcElement.className.indexOf(\"u-button-secondary\") !== -1){\n      hideCams();\n    }\n  });\n  \n  function showCams(){\n    if(!camsVisible){\n      camsVisible = true;\n      iframeizeCams();\n    }\n  }\n\n  function hideCams(){\n    \n    if(jitsiLoaded){\n      jitsiDiv.style.display = \"none\";\n      jitsiLoaded = false;\n      api.dispose();\n    }\n    kiwi.emit('mediaviewer.hide');\n  }\n  \n  kiwi.on('mediaviewer.opened', function(){\n    mediaViewerOpen = true;\n    //showCams();\n  });\n  \n  kiwi.on('mediaviewer.hide', function(){\n    mediaViewerOpen = false;\n    camsVisible = false;\n    jitsiLoaded = false;\n  });\n});"],"sourceRoot":""}