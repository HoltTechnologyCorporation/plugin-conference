{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./plugin.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","kiwi","plugin","log","jitsiDomain","state","setting","camsVisible","camClick","mediaViewerOpen","jitsiLoaded","api","buttonAdded","jitsiDiv","resizejitsiDiv","network","buffer","options","domain","showCams","style","display","resizeJitsiDiv","document","createElement","mediaViewerDiv","getElementsByClassName","height","clientHeight","width","clientWidth","position","rect","getBoundingClientRect","top","left","window","addEventListener","background","innerHTML","body","appendChild","getActiveNetwork","getActiveBuffer","suffix","Date","now","isChannelName","replace","nicks","push","nick","sort","join","encodeURIComponent","substring","indexOf","roomName","parentNode","interfaceConfigOverwrite","TOOLBAR_BUTTONS","jitsiAPIScript","setAttribute","event","target","nodeName","JitsiMeetExternalAPI","executeCommand","head","hideCams","dispose","on","command","conferencingTool","className","addUi","onclick","e","preventDefault","emit","srcElement"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","kiwi.plugin('conferencePlugin', function(kiwi, log) {\n\n  let jitsiDomain = kiwi.state.setting('conference.server')\n  let camsVisible = camClick = mediaViewerOpen = jitsiLoaded = api = buttonAdded = false;\n  let jitsiDiv = resizejitsiDiv = network = buffer = options = domain = false;\n  \n  kiwi.on('irc.raw', function(command, event){\n    if(command === \"JOIN\" && !buttonAdded){\n      buttonAdded = true;\n      const conferencingTool = document.createElement('i');\n      conferencingTool.className = 'fa fa-video-camera';\n      kiwi.addUi('input', conferencingTool);\n      conferencingTool.onclick = function(e){\n        e.preventDefault();\n        camClick = true;\n        if(camsVisible){\n          kiwi.emit('mediaviewer.hide');\n        }else{\n          if(mediaViewerOpen){\n            showCams();\n          }else{\n            kiwi.emit('mediaviewer.show', '');\n          }\n        }\n      }\n    }\n  });\n  \n  window.addEventListener(\"click\", function(e){\n    if(e.srcElement.className.indexOf(\"kiwi-messagelist-message-linkhandle\") !== -1 ||\n       e.srcElement.className.indexOf(\"u-button-secondary\") !== -1){\n      hideCams();\n    }\n  });\n  \n  function showCams(){\n    mediaViewerOpen = true;\n    if(!camClick) return;\n    if(!camsVisible){\n      if(jitsiLoaded){\n        jitsiDiv.style.display = \"block\";\n        resizeJitsiDiv();\n      }else{\n        jitsiDiv = document.createElement(\"div\");\n        resizeJitsiDiv = function(){\n          let mediaViewerDiv = document.getElementsByClassName(\"kiwi-mediaviewer\")[0];\n          jitsiDiv.style.height = mediaViewerDiv.clientHeight + \"px\";\n          jitsiDiv.style.width = mediaViewerDiv.clientWidth + \"px\";\n          jitsiDiv.style.position = \"absolute\";\n          let rect = mediaViewerDiv.getBoundingClientRect();\n          jitsiDiv.style.top = rect.top + \"px\";\n          jitsiDiv.style.left = rect.left + \"px\";\n        }\n        resizeJitsiDiv();\n        window.addEventListener(\"resize\", function(){\n          if(camsVisible)resizeJitsiDiv();\n        });\n        jitsiDiv.style.background = \"#000\";\n        jitsiDiv.innerHTML = \"Loading Camera...\";\n        document.body.appendChild(jitsiDiv);\n        network = window.kiwi.state.getActiveNetwork();\n        buffer = window.kiwi.state.getActiveBuffer(); \n        let d = Date.now();\n        while(typeof buffer.name === \"undefined\" && Date.now() - d < 5000){ // allow up to 5 seconds to get buffer data\n          buffer = window.kiwi.state.getActiveBuffer();\n        }\n        let suffix;\n        if(!network.isChannelName(buffer.name)){ // cam is being invoked in PM, not a channel\n          let nicks = [];\n          nicks.push(network.nick);\n          nicks.push(buffer.name);\n          nicks.sort();\n          let s = nicks.join('').replace(/-/g,\"\");\n          suffix = encodeURIComponent(s.substring(0,s.indexOf(\"#\")==-1?100:s.indexOf(\"#\")-1));\n        }else{\n          suffix = buffer.name.replace(/#/g, \"\");\n        }\n        let roomName = network.name + suffix;\n        domain = jitsiDomain;\n        options = {\n            height:\"100%\",\n            roomName,\n            parentNode: jitsiDiv,\n            interfaceConfigOverwrite: {TOOLBAR_BUTTONS: [\n            'microphone', 'camera', 'fullscreen', 'fodeviceselection', 'hangup',\n            'profile', 'contacts', 'info', 'recording', 'etherpad',\n            'settings', 'videoquality', 'filmstrip',\n            'invite', 'feedback', 'stats', 'shortcuts'\n            ]}\n        }\n        let jitsiAPIScript = document.createElement(\"script\");\n        jitsiAPIScript.setAttribute(\"type\", \"text/javascript\");\n        jitsiAPIScript.setAttribute(\"src\", \"https://meet.jit.si/external_api.js\");\n        jitsiAPIScript.addEventListener(\"load\", function(event){\n          if(event.target.nodeName === \"SCRIPT\"){\n            jitsiLoaded = true;\n            jitsiDiv.innerHTML=\"\";\n            api = new JitsiMeetExternalAPI(domain, options);\n            api.executeCommand('displayName', network.nick);\n            api.executeCommand('toggleAudio')\n            api.executeCommand('toggleVideo')\n          }\n        });\n        document.head.appendChild(jitsiAPIScript);\n      }\n    }\n    camsVisible = true;\n  }\n\n  function hideCams(){\n    \n    if(jitsiLoaded){\n      jitsiDiv.style.display = \"none\";\n      jitsiLoaded = false;\n      api.dispose();\n    }\n    camsVisible = false;\n    camClick = false;\n  }\n  \n  kiwi.on('mediaviewer.opened', function(){\n    showCams();\n  });\n  \n  kiwi.on('mediaviewer.hide', function(){\n    hideCams();\n    mediaViewerOpen = false;\n  });\n});"],"sourceRoot":""}